# Kyverno Policy Test Cases
# Tests for verifyImages and PSS-aligned rules

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: test-verify-images
  annotations:
    policies.kyverno.io/title: Test Verify Images Policy
spec:
  validationFailureAction: enforce
  rules:
  - name: test-verify-image-signatures
    match:
      resources:
        kinds:
        - Pod
    verifyImages:
    - imageReferences:
      - "ghcr.io/aegis-framework/test-app:latest"
      key: |-
        -----BEGIN PUBLIC KEY-----
        MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE8nXRh950IZbRj8Ra/N9sbqOPQv7
        8XaSm451y8TxLGpN3PoT3kFBA4v8PhCL6pKHyE5H8WTZQMhcWZBm8PjYg==
        -----END PUBLIC KEY-----

---
# Test Pod that should PASS verification
apiVersion: v1
kind: Pod
metadata:
  name: test-pod-valid
  namespace: default
  labels:
    test: kyverno-validation
spec:
  containers:
  - name: test
    image: ghcr.io/aegis-framework/test-app@sha256:1234567890abcdef
    resources:
      requests:
        memory: "64Mi"
        cpu: "100m"
      limits:
        memory: "128Mi"
        cpu: "200m"
    securityContext:
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true

---
# Test Pod that should FAIL verification (unsigned image)
apiVersion: v1
kind: Pod
metadata:
  name: test-pod-invalid
  namespace: default
  labels:
    test: kyverno-validation
spec:
  containers:
  - name: test
    image: docker.io/library/nginx:latest  # Should fail registry check
    resources:
      requests:
        memory: "64Mi"
        cpu: "100m"
      limits:
        memory: "128Mi"
        cpu: "200m"
    securityContext:
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true

---
# Test Pod that should FAIL PSS check (missing resource limits)
apiVersion: v1
kind: Pod
metadata:
  name: test-pod-no-limits
  namespace: default
  labels:
    test: kyverno-validation
spec:
  containers:
  - name: test
    image: ghcr.io/aegis-framework/test-app@sha256:1234567890abcdef
    securityContext:
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true